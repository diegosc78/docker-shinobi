ARG DEBIAN_FRONTEND=noninteractive \
    EXCLUDE_DB=true

## BUILD IMAGE, mostly keeping the original Dockerfile
FROM node:22.7.0-bullseye-slim AS build

ENV DB_USER=shinobi \
    DB_PASSWORD='shinobi' \
    DB_HOST='mariadb' \
    DB_DATABASE=ccio \
    DB_PORT=3306 \
    DB_TYPE='mysql' \
    SUBSCRIPTION_ID=sub_XXXXXXXXXXXX \
    PLUGIN_KEYS='{}' \
    SSL_ENABLED='false' \
    SSL_COUNTRY='ES' \
    SSL_STATE='GA' \
    SSL_LOCATION='Coruna' \
    SSL_ORGANIZATION='Ponte' \
    SSL_ORGANIZATION_UNIT='IT Department' \
    SSL_COMMON_NAME='cctv.ponte.me' \
    DB_DISABLE_INCLUDED=$EXCLUDE_DB

RUN echo "Installing build packages..." && \ 
    apt-get update -y && apt-get upgrade -y && \
    apt-get install -y curl python3 tar bzip2 xz-utils \
        coreutils procps gnutls-bin \
        x264 ffmpeg mariadb-client \
        wget curl net-tools \
        software-properties-common build-essential git \
        python3 \
        sudo \
        pkg-config apt-utils \
        yasm nasm \
        tar bzip2 xz-utils \
        coreutils \
        procps \
        gnutls-bin \
        make g++ gcc \
        libfreetype6-dev \
        libgnutls28-dev \
        libmp3lame-dev \
        libass-dev \
        libogg-dev \
        libtheora-dev \
        libvorbis-dev \
        libvpx-dev \
        libwebp-dev \
        libssh2-1-dev \
        libopus-dev \
        librtmp-dev \
        libx264-dev \
        libx265-dev \
        x264 ffmpeg \
        ca-certificates gnupg && \
    echo "Cleaning NPM cache..." && \ 
    npm cache clean -f && \
    echo "Installing node global dependencies..." && \ 
    npm i npm@latest pm2 pg -g --maxsockets 1 

WORKDIR /home/Shinobi
COPY . ./

RUN echo "Setting some folder permissions..." && \ 
    chmod 700 /home/Shinobi && \
    chmod -R 700 /home/Shinobi/plugins && \
    chmod -f +x /home/Shinobi/Docker/init.sh && \
    echo "Build info:" && \ 
    echo " - Node:   " && node -v && \
    echo " - NPM:    " && npm -v && \
    echo " - ffmpeg: " && ffmpeg -version && \
    npm install --unsafe-perm --maxsockets 1 && \ 
    npm install mqtt@4.2.8 && \ 
    echo "And some final tweaks..." && \ 
    sed -i -e 's/\r//g' /home/Shinobi/Docker/init.sh

## FINAL IMAGE FROM HERE
##    todo: 
##      - USER non root
FROM node:22.7.0-bullseye-slim AS finalimage

ENV DB_USER=shinobi \
    DB_PASSWORD='shinobi' \
    DB_HOST='mariadb' \
    DB_DATABASE=ccio \
    DB_PORT=3306 \
    DB_TYPE='mysql' \
    SUBSCRIPTION_ID=sub_XXXXXXXXXXXX \
    PLUGIN_KEYS='{}' \
    SSL_ENABLED='false' \
    SSL_COUNTRY='ES' \
    SSL_STATE='GA' \
    SSL_LOCATION='Coruna' \
    SSL_ORGANIZATION='Ponte' \
    SSL_ORGANIZATION_UNIT='IT Department' \
    SSL_COMMON_NAME='cctv.ponte.me' \
    DB_DISABLE_INCLUDED=$EXCLUDE_DB

RUN echo "Installing runtime packages..." && \
    apt-get update -y && \
    apt-get install -y ca-certificates curl python3 tar bzip2 xz-utils coreutils procps gnutls-bin \
                    x264 ffmpeg mariadb-client && \
    echo "Cleaning NPM cache..." && \ 
    npm cache clean -f && \
    echo "Installing node global dependencies..." && \ 
    npm i npm@latest pm2 pg -g --maxsockets 1

COPY --from=build /home/Shinobi /home/Shinobi

RUN echo "Fixing config files permissions for non-root user (allow write conf.json, see init.sh)..." && \
    chown 1000:1000 /home/Shinobi
#    chown 1000:1000 /home/Shinobi/conf.json /home/Shinobi/super.json && \
#    chmod ug+w /home/Shinobi/conf.json /home/Shinobi/super.json

RUN echo "Runtime info:" && \ 
    echo " - Node   :" && node -v && \
    echo " - NPM    :" && npm -v && \
    echo " - ffmpeg :" && ffmpeg -version && \
    echo "Cleaning..." && \ 
    rm -f /home/Shinobi/Dockerfile* && rm -f /home/Shinobi/*.md && \
    rm -rf /var/lib/{apt,dpkg,cache,log}/ && apt remove apt --autoremove -y --allow-remove-essential

WORKDIR /home/Shinobi
USER 1000

VOLUME ["/home/Shinobi/videos"]
VOLUME ["/home/Shinobi/plugins"]
VOLUME ["/home/Shinobi/libs/customAutoLoad"]
VOLUME ["/config"]

EXPOSE 8080 8443

ENTRYPOINT ["/home/Shinobi/Docker/init.sh"]

CMD [ "pm2-docker", "/home/Shinobi/Docker/pm2.yml" ]
